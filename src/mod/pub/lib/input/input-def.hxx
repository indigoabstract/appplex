#pragma once

enum mws_key_actions
{
   mws_key_press,
   mws_key_release,
};


enum mws_key_types
{
   mws_key_invalid,
   mws_key_left,
   mws_key_up,
   mws_key_right,
   mws_key_down,
   mws_key_num_lock,
   mws_key_insert,
   mws_key_delete,
   mws_key_backspace,
   mws_key_tab,
   mws_key_page_up,
   mws_key_page_down,
   mws_key_scroll_lock,
   mws_key_enter,
   mws_key_home,
   mws_key_f1,
   mws_key_f2,
   mws_key_f3,
   mws_key_f4,
   mws_key_f5,
   mws_key_f6,
   mws_key_f7,
   mws_key_f8,
   mws_key_f9,
   mws_key_f10,
   mws_key_f11,
   mws_key_f12,
   mws_key_escape,
   mws_key_shift,
   mws_key_control,
   mws_key_alt,
   mws_key_end,

   // begin printable ascii
   mws_key_space,
   mws_key_exclamation,
   mws_key_double_quote,
   mws_key_number_sign,
   mws_key_dollar_sign,
   mws_key_percent_sign,
   mws_key_ampersand,
   mws_key_single_quote,
   mws_key_left_parenthesis,
   mws_key_right_parenthesis,
   mws_key_asterisk,
   mws_key_plus_sign,
   mws_key_comma,
   mws_key_minus_sign,
   mws_key_period,
   mws_key_slash,
   mws_key_0,
   mws_key_1,
   mws_key_2,
   mws_key_3,
   mws_key_4,
   mws_key_5,
   mws_key_6,
   mws_key_7,
   mws_key_8,
   mws_key_9,
   mws_key_colon,
   mws_key_semicolon,
   mws_key_less_than_sign,
   mws_key_equal_sign,
   mws_key_greater_than_sign,
   mws_key_question_mark,
   mws_key_at_symbol,
   mws_key_a_upper_case,
   mws_key_b_upper_case,
   mws_key_c_upper_case,
   mws_key_d_upper_case,
   mws_key_e_upper_case,
   mws_key_f_upper_case,
   mws_key_g_upper_case,
   mws_key_h_upper_case,
   mws_key_i_upper_case,
   mws_key_j_upper_case,
   mws_key_k_upper_case,
   mws_key_l_upper_case,
   mws_key_m_upper_case,
   mws_key_n_upper_case,
   mws_key_o_upper_case,
   mws_key_p_upper_case,
   mws_key_q_upper_case,
   mws_key_r_upper_case,
   mws_key_s_upper_case,
   mws_key_t_upper_case,
   mws_key_u_upper_case,
   mws_key_v_upper_case,
   mws_key_w_upper_case,
   mws_key_x_upper_case,
   mws_key_y_upper_case,
   mws_key_z_upper_case,
   mws_key_left_bracket,
   mws_key_backslash,
   mws_key_right_bracket,
   mws_key_circumflex,
   mws_key_underscore,
   mws_key_grave_accent,
   // add small caps letters. simplifies handling of keys/characters
   mws_key_a,
   mws_key_b,
   mws_key_c,
   mws_key_d,
   mws_key_e,
   mws_key_f,
   mws_key_g,
   mws_key_h,
   mws_key_i,
   mws_key_j,
   mws_key_k,
   mws_key_l,
   mws_key_m,
   mws_key_n,
   mws_key_o,
   mws_key_p,
   mws_key_q,
   mws_key_r,
   mws_key_s,
   mws_key_t,
   mws_key_u,
   mws_key_v,
   mws_key_w,
   mws_key_x,
   mws_key_y,
   mws_key_z,
   mws_key_left_brace,
   mws_key_vertical_bar,
   mws_key_right_brace,
   mws_key_tilde_sign,
   // end printable ascii

   mws_key_del,
   mws_key_num0,
   mws_key_num1,
   mws_key_num2,
   mws_key_num3,
   mws_key_num4,
   mws_key_num5,
   mws_key_num6,
   mws_key_num7,
   mws_key_num8,
   mws_key_num9,
   mws_key_num_multiply,
   mws_key_num_add,
   mws_key_num_subtract,
   mws_key_num_decimal,
   mws_key_num_divide,
   mws_key_select,

   mws_key_count,
};


enum mws_dir_types
{
   mws_dir_none,
   mws_dir_left,
   mws_dir_up_left,
   mws_dir_up,
   mws_dir_up_right,
   mws_dir_right,
   mws_dir_down_right,
   mws_dir_down,
   mws_dir_down_left,
};


enum mws_alpha_dir_types
{
   mws_dk_up = mws_key_w,
   mws_dk_down = mws_key_x,
   mws_dk_left = mws_key_a,
   mws_dk_right = mws_key_d,
   mws_dk_down_left = mws_key_z,
   mws_dk_down_right = mws_key_c,
   mws_dk_up_left = mws_key_q,
   mws_dk_up_right = mws_key_e,
};
